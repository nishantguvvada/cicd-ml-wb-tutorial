name: w-b
on:
  issue_comment:
    
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  w-b:
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, '/wandb')
    runs-on: ubuntu-latest
    steps:        
    - name: Get repo contents
      uses: actions/checkout@v3

    - name: install dependencies
      run: pip install ghapi wandb wandb[workspaces]

    - name: Parse value from the command
      id: get-runid-value
      shell: python
      run: |
        import re, os
        comment = os.getenv('PR_COMMENT', '')
        match = re.search('/wandb[\s+](\S+)', comment)
        # match = comment.split(" ")[1]

        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
          if match:
            print(f'VAL_FOUND=true', file=f)
            print(f'RUN_ID={match.group(1)}', file=f)
            # print(f'RUN_ID={match}', file=f
          else:
            print(f'VAL_FOUND=false', file=f)
      env:
        PR_COMMENT: ${{ github.event.comment.body }}
        
    - name: Generate the comparison report
      if: steps.get-runid-value.outputs.VAL_FOUND == 'true'
      id: wandb-report
      run: python ./client/compare_runs.py
      env:
        WANDB_ENTITY: nishant-guvvada-rackspace-technology
        WANDB_PROJECT: cicd-ml
        BASELINE_TAG: baseline
        RUN_ID: "${{ steps.get-runid-value.outputs.RUN_ID }}"
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        
    - name: Make a comment with the GitHub API
      uses: actions/github-script@v6
      if: steps.wandb-report.outcome == 'success' 
      with:
        script: |
           var msg = `A comparison between the linked run and baseline is available [in this report](${process.env.REPORT_URL})`
           github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: msg
            });
      env:
        REPORT_URL: "${{ steps.wandb-report.outputs.REPORT_URL }}"

    - name: Add Label to PR
      if: steps.wandb-report.outcome == 'success'
      shell: python
      run: |
        import os
        from ghapi.core import GhApi
        owner, repo = os.environ['REPO'].split('/')
        api = GhApi(owner=owner, repo=repo)
        api.issues.add_labels(issue_number=os.environ['NUMBER'], labels=['experiment-linked'])
      env:
        NUMBER: ${{ github.event.issue.number }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        REPO: ${{ github.repository }}
